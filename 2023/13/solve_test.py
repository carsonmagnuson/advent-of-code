import solve
def test_parse():
    assert solve.parse("1") == [
        [
            ["#", ".", "#", "#", ".", ".", "#", "#", "."],
            [".", ".", "#", ".", "#", "#", ".", "#", "."],
            ["#", "#", ".", ".", ".", ".", ".", ".", "#"],
            ["#", "#", ".", ".", ".", ".", ".", ".", "#"],
            [".", ".", "#", ".", "#", "#", ".", "#", "."],
            [".", ".", "#", "#", ".", ".", "#", "#", "."],
            ["#", ".", "#", ".", "#", "#", ".", "#", "."],
        ],
        [
            ["#", ".", ".", ".", "#", "#", ".", ".", "#"],
            ["#", ".", ".", ".", ".", "#", ".", ".", "#"],
            [".", ".", "#", "#", ".", ".", "#", "#", "#"],
            ["#", "#", "#", "#", "#", ".", "#", "#", "."],
            ["#", "#", "#", "#", "#", ".", "#", "#", "."],
            [".", ".", "#", "#", ".", ".", "#", "#", "#"],
            ["#", ".", ".", ".", ".", "#", ".", ".", "#"],
        ],
    ]


def test_mirrorline():
    assert solve.mirrorline([
            ["#", ".", "#", "#", ".", ".", "#", "#", "."],
            [".", ".", "#", ".", "#", "#", ".", "#", "."],
            ["#", "#", ".", ".", ".", ".", ".", ".", "#"],
            ["#", "#", ".", ".", ".", ".", ".", ".", "#"],
            [".", ".", "#", ".", "#", "#", ".", "#", "."],
            [".", ".", "#", "#", ".", ".", "#", "#", "."],
            ["#", ".", "#", ".", "#", "#", ".", "#", "."],
        ]) == 5

def test_a():
    assert solve.a("1") == 405
